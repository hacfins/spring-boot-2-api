<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.langyastudio.edu.db.mapper.UmsUserLoginLogsMapper">
    <resultMap id="BaseResultMap" type="com.langyastudio.edu.db.model.UmsUserLoginLogs">
        <!--@mbg.generated-->
        <!--@Table ums_user_login_logs-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="ip" jdbcType="INTEGER" property="ip"/>
        <result column="os_name" jdbcType="VARCHAR" property="osName"/>
        <result column="browse_name" jdbcType="VARCHAR" property="browseName"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, user_name, `location`, ip, os_name, browse_name, update_time, delete_time, create_time
    </sql>

    <insert id="insertUserLoginLogs" keyColumn="id" keyProperty="id"
            parameterType="com.langyastudio.edu.db.model.UmsUserLoginLogs" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into ums_user_login_logs
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                user_name,
            </if>
            <if test="location != null">
                `location`,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="osName != null">
                os_name,
            </if>
            <if test="browseName != null">
                browse_name,
            </if>
            update_time,
            <if test="deleteTime != null">
                delete_time,
            </if>
            create_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="location != null">
                #{location,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=INTEGER},
            </if>
            <if test="osName != null">
                #{osName,jdbcType=VARCHAR},
            </if>
            <if test="browseName != null">
                #{browseName,jdbcType=VARCHAR},
            </if>
            #{updateTime,jdbcType=TIMESTAMP},
            <if test="deleteTime != null">
                #{deleteTime,jdbcType=TIMESTAMP},
            </if>
            #{createTime,jdbcType=TIMESTAMP},
        </trim>
    </insert>

    <!--auto generated by MybatisCodeHelper on 2021-05-08-->
    <select id="getListByUserName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ums_user_login_logs
        where user_name = #{userName,jdbcType=VARCHAR}
        order by id desc
    </select>

    <select id="findTotalVisitCount" resultType="long">
        select count(*)
        from ums_user_login_logs
    </select>

    <select id="findTodayVisitCount" resultType="long">
        SELECT count(1)
        FROM ums_user_login_logs
        WHERE create_time between CURDATE() and DATE_ADD(CURDATE(), INTERVAL 1 DAY)
    </select>

    <select id="findTodayIp" resultType="long">
        SELECT count(DISTINCT (ip))
        FROM ums_user_login_logs
        WHERE create_time between CURDATE() and DATE_ADD(CURDATE(), INTERVAL 1 DAY)
    </select>

    <select id="getListByActive" resultType="map">
        select
        count(ll.user_name) as count,ll.user_name
        FROM ums_user_login_logs ll
        left join ums_school_users su on ll.user_name = su.user_name
        <where>
            <if test="schoolId != null">
                and su.school_id = #{schoolId,jdbcType=CHAR}
            </if>
            <if test="minCreateTime != null">
                and ll.create_time <![CDATA[>=]]> #{minCreateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="maxCreateTime != null">
                and ll.create_time <![CDATA[<=]]> #{maxCreateTime,jdbcType=TIMESTAMP}
            </if>
            and su.user_type = 1
        </where>
        group by ll.user_name
        order by count desc
    </select>
</mapper>