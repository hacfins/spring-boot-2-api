<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.langyastudio.edu.db.mapper.UmsRoleApisMapper">
    <resultMap id="BaseResultMap" type="com.langyastudio.edu.db.model.UmsRoleApis">
        <!--@mbg.generated-->
        <!--@Table ums_role_apis-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="role_id" jdbcType="CHAR" property="roleId"/>
        <result column="api_id" jdbcType="CHAR" property="apiId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, role_id, api_id, update_time, delete_time, create_time
    </sql>

    <insert id="batchInsertRoleApis" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into ums_role_apis
                (role_id, api_id, update_time, create_time)
                values
        <foreach collection="list" item="item" separator=",">
            (#{item.roleId,jdbcType=CHAR}, #{item.apiId,jdbcType=CHAR}, #{item.updateTime,jdbcType=TIMESTAMP},
             #{item.createTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <!--auto generated by MybatisCodeHelper on 2021-04-23-->
    <update id="batchDeleteByRoleId">
        update ums_role_apis
        set delete_time = now()
                where role_id = #{roleId,jdbcType=CHAR}
                  and api_id in
        <foreach collection="apiIds" item="apiId" open="(" separator="," close=")">
            (#{apiId,jdbcType=CHAR})
        </foreach>
    </update>

    <!--auto generated by MybatisCodeHelper on 2021-04-23-->
    <select id="getApiIdsByRoleId" resultType="java.lang.String">
        select distinct api.api_id
        from ums_api api
        <if test="roleIds != null and roleIds.size() != 0">
            left join ums_role_apis rapis on api.api_id = rapis.api_id
        </if>
        <where>
            <if test="roleIds != null">
                rapis.role_id in
                <foreach collection="roleIds" item="roleId" open="(" separator="," close=")">
                    (#{roleId,jdbcType=CHAR})
                </foreach>
                and rapis.delete_time is null
            </if>
            and api.delete_time is null
        </where>
    </select>

    <select id="getMenuApiIds" resultType="java.lang.String">
        select distinct api.api_id
        from ums_api api
        <if test="roleIds != null and roleIds.size() != 0">
            left join ums_role_apis rapis on api.api_id = rapis.api_id
        </if>
        <where>
            <if test="roleIds != null and roleIds.size() != 0">
                rapis.role_id in
                <foreach collection="roleIds" item="roleId" open="(" separator="," close=")">
                    (#{roleId,jdbcType=CHAR})
                </foreach>
                and rapis.delete_time is null
            </if>
            and api.api_module like 'menu_%'
            and api.delete_time is null
        </where>
        order by api.id
    </select>
</mapper>